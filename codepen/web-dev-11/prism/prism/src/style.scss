@import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
*::before,
*::after {
  box-sizing: border-box;
}
html,
body {
  overscroll-behavior-x: none;
  overscroll-behavior-y: none;
  scroll-behavior: smooth;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  font-family: "Geist", sans-serif;
  font-size: clamp(20px, 5vw, 45px);
  position: relative;
  width: 100vw;
  height: 100vh;
  text-align: center;
  overflow: hidden;
  background-color: #555;
  color: PaleVioletRed;

  /* pre display用 */
  background-image: url("https://images.unsplash.com/photo-1597992350431-56cb7e28a7a2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMwMjAzNDN8&ixlib=rb-4.0.3&q=80&w=400");
  background-position: center bottom;
  background-size: cover;
}

@property --pos-x {
  syntax: "<length>";
  inherits: true;
  initial-value: 0px;
}
@property --pos-y {
  syntax: "<length>";
  inherits: true;
  initial-value: 0px;
}
@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}
#prism {
  $num: 30;

  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  mix-blend-mode: overlay;

  --size: 0.025;
  --opacity: 1;

  /* start value */
  --pos-x-s: 0vw;
  --pos-y-s: 0vh;
  --angle-s: 0deg;

  /* end value */
  --pos-x-e: 0vw;
  --pos-y-e: 0vh;
  --angle-e: 0deg;

  --scale: 1;
  --duration: 2s;
  --delay: 0s;

  > div {
    @for $i from 1 through $num {
      &:nth-child(#{$i}) {
        $plusminus: if($i % 2 == 0, -1, 1);
        $pos-x: random(1000) / 10;
        $pos-y: random(1000) / 10;
        $angle: (random(50) / 10 + 5) * $plusminus;

        --pos-x-s: #{$pos-x}vw;
        --pos-y-s: #{$pos-y}vh;
        --angle-s: #{$angle}deg;
        --pos-x-e: #{$pos-x + random(80) / 10 + 5}vw;
        --pos-y-e: #{$pos-y + random(80) / 10 + 5}vh;
        --angle-e: #{$angle + (random(200) / 10 + 2) * $plusminus}deg;

        --scale: #{random(200) * 0.01 + 1};
        --duration: #{random(100) / 10 + 5}s;
        --delay: #{random(700) / 10 * -0.3}s;

        --opacity: #{random(50) * 0.01 + 0.2};
      }
    }

    position: absolute;
    top: 0;
    left: 0;
    width: calc(((100vmin + 100vmax) / 2) * var(--size));
    height: calc(((100vmin + 100vmax) / 2) * var(--size));
    background-image: linear-gradient(
      to bottom in oklch decreasing hue,
      oklch(0.8 0.3 300deg / var(--opacity)) 24%,
      oklch(0.8 0.2 300deg / var(--opacity)),
      oklch(0.8 0.2 300deg / var(--opacity)),
      oklch(0.95 0.2 270deg / var(--opacity)),
      oklch(0.95 0.2 270deg / var(--opacity)),
      oklch(0.95 0.2 240deg / var(--opacity)),
      oklch(0.95 0.2 240deg / var(--opacity)),
      oklch(0.95 0.1 210deg / var(--opacity)),
      oklch(0.95 0.1 210deg / var(--opacity)),
      oklch(0.95 0.1 180deg / var(--opacity)),
      oklch(0.95 0.1 180deg / var(--opacity)),
      oklch(0.95 0.1 150deg / var(--opacity)),
      oklch(0.95 0.1 150deg / var(--opacity)),
      oklch(0.95 0.1 120deg / var(--opacity)),
      oklch(0.95 0.1 120deg / var(--opacity)),
      oklch(0.95 0.2 90deg / var(--opacity)),
      oklch(0.95 0.2 90deg / var(--opacity)),
      oklch(0.95 0.2 60deg / var(--opacity)),
      oklch(0.95 0.2 60deg / var(--opacity)),
      oklch(0.95 0.2 30deg / var(--opacity)),
      oklch(0.95 0.2 30deg / var(--opacity)),
      oklch(0.8 0.2 0deg / var(--opacity)),
      oklch(0.8 0.2 0deg / var(--opacity)),
      oklch(0.8 0.2 0deg / var(--opacity)) 78%
    );
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100% 100%;

    mask-image: radial-gradient(
      closest-side circle at center,
      white 30% /* 背景画像にあわせてこの%を微調整 0から30%くらいの間 */,
      transparent
    );

    transform: skew(calc(var(--angle) / 2), var(--angle))
      rotate(calc(var(--angle) * -2)) translate3d(var(--pos-x), var(--pos-y), 0)
      scale3d(calc(var(--scale) / 1.8), var(--scale), 1);
    transform-origin: center top;
    will-change: transform;

    animation-name: anim;
    animation-duration: var(--duration);
    animation-delay: var(--delay);
    animation-timing-function: ease-in-out;
    animation-direction: alternate;
    animation-iteration-count: infinite;

    /* お好みで
    filter: blur(1px);
*/
  }
  > div:nth-child(even) {
    animation-direction: alternate-reverse;
  }
}

@keyframes anim {
  0% {
    --pos-x: var(--pos-x-s);
    --pos-y: var(--pos-y-s);
    --angle: var(--angle-s);
  }

  100% {
    --pos-x: var(--pos-x-e);
    --pos-y: var(--pos-y-e);
    --angle: var(--angle-e);
  }
}

main {
  position: relative;
}
section {
  position: relative;
  width: 100%;
  height: auto;
  min-height: 100vh;
  display: grid;
  place-items: center;
}
@property --hue {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}
h1,
p {
  background-image: linear-gradient(
    60deg in oklch longer hue,
    oklch(0.9 0.1 360deg),
    oklch(0.9 0.1 0deg)
  );
  background-position: 200% 0%;
  background-repeat: repeat;
  background-size: 200% 100%;
  background-clip: text;
  color: transparent;

  animation-name: anim-text;
  animation-duration: 8s;

  animation-timing-function: linear;
  animation-direction: reverse;
  animation-iteration-count: infinite;

  will-change: background;
}
h1 {
  text-transform: uppercase;
  -webkit-text-stroke: 1px oklch(0.7 0.2 var(--hue) / 0.3);
  text-stroke: 1px oklch(0.7 0.2 var(--hue) / 0.3);
  animation-direction: normal;
}
@keyframes anim-text {
  100% {
    background-position: -200% 0%;
  }
}

/*** photo auto slider ***/
#photos {
  --photo-delay: 0s;
  $num: 6; /* 画像枚数 */
  $time: 30; /* n秒で1サイクル */

  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;

  .photo {
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
    opacity: 0;
    background-size: cover;
    background-position: center center;
    animation: anim-image #{$time}s infinite;
    animation-delay: var(--photo-delay);
    will-change: opacity;

    @for $i from 1 through $num {
      $delay: ($time / $num) * ($i - 1);
      &:nth-child(#{$i}) {
        --photo-delay: #{$delay}s;
      }
    }
  }

  .photo:nth-of-type(1) {
    background-image: url("https://images.unsplash.com/photo-1597992350431-56cb7e28a7a2?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDI5NTQ0ODZ8&ixlib=rb-4.0.3&q=85");
    background-position: center bottom;
  }

  .photo:nth-of-type(2) {
    background-image: url("https://images.unsplash.com/photo-1632230997264-b2bfc65cb8b4?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMwMjI3NzN8&ixlib=rb-4.0.3&q=85");
    /*
    background-position: center top;
*/
  }

  .photo:nth-of-type(3) {
    background-image: url("https://images.unsplash.com/photo-1473181488821-2d23949a045a?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMxMTM5Nzl8&ixlib=rb-4.0.3&q=85");
  }

  .photo:nth-of-type(4) {
    background-image: url("https://images.unsplash.com/photo-1516633886686-2a2ffb459273?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMxMjE2MzR8&ixlib=rb-4.0.3&q=85");
  }

  .photo:nth-of-type(5) {
    background-image: url("https://images.unsplash.com/photo-1596226310268-f76b50d14a4a?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMxMjg5MDF8&ixlib=rb-4.0.3&q=85");
  }

  .photo:nth-of-type(6) {
    background-image: url("https://images.unsplash.com/photo-1622350659525-5db262512ce2?crop=entropy&cs=srgb&fm=jpg&ixid=M3wzMjM4NDZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE3NDMxMjI0MjJ8&ixlib=rb-4.0.3&q=85");
  }

  .photo::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
      rgba(black, 0.4) 0%,
      transparent 30%,
      transparent 70%,
      rgba(black, 0.4) 100%
    );
    box-shadow: inset 0 0 6px 2px rgba(black, 0.3);
  }
}

@keyframes anim-image {
  0%,
  30%,
  100% {
    opacity: 0;
  } /* 非表示 */
  8%,
  22% {
    opacity: 1;
  } /* 表示 */
}
